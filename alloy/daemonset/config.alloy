logging {
	level  = "info"
	format = "logfmt"
}

livedebugging {
  enabled = true
}

discovery.kubernetes "logs_default_kubernetes_pods_name" {
	role = "pod"
}

discovery.relabel "logs_default_kubernetes_pods_name" {
	targets = discovery.kubernetes.logs_default_kubernetes_pods_name.targets

	rule {
		source_labels = ["__meta_kubernetes_pod_label_name"]
		target_label  = "__service__"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_node_name"]
		target_label  = "__host__"
	}

	rule {
		source_labels = ["__service__"]
		regex         = ""
		action        = "drop"
	}

	rule {
		regex  = "__meta_kubernetes_pod_label_(.+)"
		action = "labelmap"
	}

	rule {
		source_labels = ["__meta_kubernetes_namespace", "__service__"]
		separator     = "/"
		target_label  = "job"
	}

	rule {
		source_labels = ["__meta_kubernetes_namespace"]
		target_label  = "namespace"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_name"]
		target_label  = "pod"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_container_name"]
		target_label  = "container"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_uid", "__meta_kubernetes_pod_container_name"]
		separator     = "/"
		target_label  = "__path__"
		replacement   = "/var/log/pods/*$1/*.log"
	}
}

local.file_match "logs_default_kubernetes_pods_name" {
	path_targets = discovery.relabel.logs_default_kubernetes_pods_name.output
}

loki.process "lines_processing" {
	forward_to = [loki.write.logs_default.receiver]

	stage.cri {
		max_partial_line_size          = 262142
		max_partial_line_size_truncate = true
	}

	stage.drop {
		longer_than = "255KiB1022B"
	}

	stage.regex {
		expression = "(level|lvl|severity)=(?P<debug>debug)"
	}

	stage.label_drop {
		values = ["filename"]
	}
}

loki.source.file "logs_default_kubernetes_pods_name" {
	targets               = local.file_match.logs_default_kubernetes_pods_name.targets
	forward_to            = [loki.process.lines_processing.receiver]
	legacy_positions_file = "/var/log/agent-positions/default.yml"
}

discovery.kubernetes "logs_default_kubernetes_pods_app" {
	role = "pod"
}

discovery.relabel "logs_default_kubernetes_pods_app" {
	targets = discovery.kubernetes.logs_default_kubernetes_pods_app.targets

	rule {
		source_labels = ["__meta_kubernetes_pod_label_name"]
		regex         = ".+"
		action        = "drop"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_label_app"]
		target_label  = "__service__"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_node_name"]
		target_label  = "__host__"
	}

	rule {
		source_labels = ["__service__"]
		regex         = ""
		action        = "drop"
	}

	rule {
		regex  = "__meta_kubernetes_pod_label_(.+)"
		action = "labelmap"
	}

	rule {
		source_labels = ["__meta_kubernetes_namespace", "__service__"]
		separator     = "/"
		target_label  = "job"
	}

	rule {
		source_labels = ["__meta_kubernetes_namespace"]
		target_label  = "namespace"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_name"]
		target_label  = "pod"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_container_name"]
		target_label  = "container"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_uid", "__meta_kubernetes_pod_container_name"]
		separator     = "/"
		target_label  = "__path__"
		replacement   = "/var/log/pods/*$1/*.log"
	}
}

local.file_match "logs_default_kubernetes_pods_app" {
	path_targets = discovery.relabel.logs_default_kubernetes_pods_app.output
}

loki.source.file "logs_default_kubernetes_pods_app" {
	targets               = local.file_match.logs_default_kubernetes_pods_app.targets
	forward_to            = [loki.process.lines_processing.receiver]
	legacy_positions_file = "/var/log/agent-positions/default.yml"
}

discovery.kubernetes "logs_default_kubernetes_pods_direct_controllers" {
	role = "pod"
}

discovery.relabel "logs_default_kubernetes_pods_direct_controllers" {
	targets = discovery.kubernetes.logs_default_kubernetes_pods_direct_controllers.targets

	rule {
		source_labels = ["__meta_kubernetes_pod_label_name", "__meta_kubernetes_pod_label_app"]
		separator     = ""
		regex         = ".+"
		action        = "drop"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_controller_name"]
		regex         = "[0-9a-z-.]+-[0-9a-f]{8,10}"
		action        = "drop"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_controller_name"]
		target_label  = "__service__"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_node_name"]
		target_label  = "__host__"
	}

	rule {
		source_labels = ["__service__"]
		regex         = ""
		action        = "drop"
	}

	rule {
		regex  = "__meta_kubernetes_pod_label_(.+)"
		action = "labelmap"
	}

	rule {
		source_labels = ["__meta_kubernetes_namespace", "__service__"]
		separator     = "/"
		target_label  = "job"
	}

	rule {
		source_labels = ["__meta_kubernetes_namespace"]
		target_label  = "namespace"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_name"]
		target_label  = "pod"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_container_name"]
		target_label  = "container"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_uid", "__meta_kubernetes_pod_container_name"]
		separator     = "/"
		target_label  = "__path__"
		replacement   = "/var/log/pods/*$1/*.log"
	}
}

local.file_match "logs_default_kubernetes_pods_direct_controllers" {
	path_targets = discovery.relabel.logs_default_kubernetes_pods_direct_controllers.output
}

loki.source.file "logs_default_kubernetes_pods_direct_controllers" {
	targets               = local.file_match.logs_default_kubernetes_pods_direct_controllers.targets
	forward_to            = [loki.process.lines_processing.receiver]
	legacy_positions_file = "/var/log/agent-positions/default.yml"
}

discovery.kubernetes "logs_default_kubernetes_pods_indirect_controller" {
	role = "pod"
}

discovery.relabel "logs_default_kubernetes_pods_indirect_controller" {
	targets = discovery.kubernetes.logs_default_kubernetes_pods_indirect_controller.targets

	rule {
		source_labels = ["__meta_kubernetes_pod_label_name", "__meta_kubernetes_pod_label_app"]
		separator     = ""
		regex         = ".+"
		action        = "drop"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_controller_name"]
		regex         = "[0-9a-z-.]+-[0-9a-f]{8,10}"
		action        = "keep"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_controller_name"]
		regex         = "([0-9a-z-.]+)-[0-9a-f]{8,10}"
		target_label  = "__service__"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_node_name"]
		target_label  = "__host__"
	}

	rule {
		source_labels = ["__service__"]
		regex         = ""
		action        = "drop"
	}

	rule {
		regex  = "__meta_kubernetes_pod_label_(.+)"
		action = "labelmap"
	}

	rule {
		source_labels = ["__meta_kubernetes_namespace", "__service__"]
		separator     = "/"
		target_label  = "job"
	}

	rule {
		source_labels = ["__meta_kubernetes_namespace"]
		target_label  = "namespace"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_name"]
		target_label  = "pod"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_container_name"]
		target_label  = "container"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_uid", "__meta_kubernetes_pod_container_name"]
		separator     = "/"
		target_label  = "__path__"
		replacement   = "/var/log/pods/*$1/*.log"
	}
}

local.file_match "logs_default_kubernetes_pods_indirect_controller" {
	path_targets = discovery.relabel.logs_default_kubernetes_pods_indirect_controller.output
}

loki.source.file "logs_default_kubernetes_pods_indirect_controller" {
	targets               = local.file_match.logs_default_kubernetes_pods_indirect_controller.targets
	forward_to            = [loki.process.lines_processing.receiver]
	legacy_positions_file = "/var/log/agent-positions/default.yml"
}

discovery.kubernetes "logs_default_kubernetes_pods_static" {
	role = "pod"
}

discovery.relabel "logs_default_kubernetes_pods_static" {
	targets = discovery.kubernetes.logs_default_kubernetes_pods_static.targets

	rule {
		source_labels = ["__meta_kubernetes_pod_annotation_kubernetes_io_config_mirror"]
		regex         = ""
		action        = "drop"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_label_component"]
		target_label  = "__service__"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_node_name"]
		target_label  = "__host__"
	}

	rule {
		source_labels = ["__service__"]
		regex         = ""
		action        = "drop"
	}

	rule {
		regex  = "__meta_kubernetes_pod_label_(.+)"
		action = "labelmap"
	}

	rule {
		source_labels = ["__meta_kubernetes_namespace", "__service__"]
		separator     = "/"
		target_label  = "job"
	}

	rule {
		source_labels = ["__meta_kubernetes_namespace"]
		target_label  = "namespace"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_name"]
		target_label  = "pod"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_container_name"]
		target_label  = "container"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_annotation_kubernetes_io_config_mirror", "__meta_kubernetes_pod_container_name"]
		separator     = "/"
		target_label  = "__path__"
		replacement   = "/var/log/pods/*$1/*.log"
	}
}

local.file_match "logs_default_kubernetes_pods_static" {
	path_targets = discovery.relabel.logs_default_kubernetes_pods_static.output
}

loki.source.file "logs_default_kubernetes_pods_static" {
	targets               = local.file_match.logs_default_kubernetes_pods_static.targets
	forward_to            = [loki.process.lines_processing.receiver]
	legacy_positions_file = "/var/log/agent-positions/default.yml"
}

discovery.relabel "logs_default_systemd_journal" {
	targets = []

	rule {
		source_labels = ["__journal__hostname"]
		target_label  = "nodename"
	}

	rule {
		source_labels = ["__journal_syslog_identifier"]
		target_label  = "syslog_identifier"
	}

	rule {
		source_labels = ["__journal_priority_keyword"]
		target_label  = "priority"
	}
}

loki.write "logs_default" {
	endpoint {
		url = "https://logs-prod-008.grafana.net/loki/api/v1/push"

		basic_auth {
			username = env("LOKI_USERNAME")
			password = env("LOKI_PASSWORD")
		}
	}

	external_labels = {
		cluster = "kind-alloy-deployments",
	}
}
